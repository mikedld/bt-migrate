name: CI
on: [push, pull_request]
env:
  VCPKG_DEFAULT_BINARY_CACHE: ${{ github.workspace }}/_vcpkg_cache
jobs:
  build:
    runs-on: ["${{ matrix.image }}"]
    strategy:
      matrix:
        os: [linux, mac, windows]
        include:
        - os: linux
          image: ubuntu-latest
        - os: mac
          image: macOS-latest
        - os: windows
          image: windows-latest
          cmake_args: -A x64
      fail-fast: false
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Create vcpkg cache directory
      run: mkdir _vcpkg_cache
    - name: Cache node modules
      uses: actions/cache@v4
      env:
        cache_name: vcpkg
      with:
        path: ${{ env.VCPKG_DEFAULT_BINARY_CACHE }}
        key: ${{ runner.os }}-build-${{ env.cache_name }}-${{ hashFiles('vcpkg.cmake', 'vcpkg.json') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache_name }}-
          ${{ runner.os }}-build-
          ${{ runner.os }}-
    - name: Install dependencies (linux)
      if: matrix.os == 'linux'
      run: curl -sSL https://cmake.org/files/v3.18/cmake-3.18.5-Linux-x86_64.tar.gz -o - | sudo tar xzf - --strip-components 1 -C /usr/local
    - name: CMake version
      run: cmake --version
    - name: Configure
      run: cmake -S . -B _build -DCMAKE_BUILD_TYPE=RelWithDebInfo ${{ matrix.cmake_args }}
    - name: Build
      run: cmake --build _build --config RelWithDebInfo
    - name: Prepare artifacts (linux)
      if: matrix.os == 'linux'
      run: |
        mkdir _bin
        cd _bin
        cp ../_build/BtMigrate .
        objcopy --only-keep-debug BtMigrate BtMigrate.debug
        objcopy --add-gnu-debuglink=BtMigrate.debug BtMigrate
        strip -x BtMigrate
    - name: Prepare artifacts (mac)
      if: matrix.os == 'mac'
      run: |
        mkdir _bin
        cd _bin
        cp ../_build/BtMigrate .
        dsymutil -f BtMigrate
        strip -x BtMigrate
    - name: Prepare artifacts (windows)
      if: matrix.os == 'windows'
      run: |
        mkdir _bin
        cd _bin
        copy ..\_build\RelWithDebInfo\BtMigrate.exe .
        copy ..\_build\RelWithDebInfo\BtMigrate.pdb .
    - uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.os }}-binaries
        path: _bin
